
# Whist Tournaments for Euchre

My dad has a friend that holds an annual Euchre tournament each year on St. Patties day. It's a pretty big deal, anywhere from 20-30 people will show up to see who takes home the first prize of several hundred dollars. The format is unique and very similar to a round-robin style tournament, but with a twist. Each round the teams are randomly chose via each person pulling a piece of paper out of a hat. The system is pretty simple, but there can be problems such as players playing each other multiple times or having the same partner multiple times, which is why I was approached to write a program to improve the process.

The constraints were simple, make it such that each person has every other person as a partner exactly once.

## False Start No. 1
After having done some leetcode exercies on backtracking, specifically on how to generate combinations while backtracking, I thought that I knew the solution right away. I would generate all of the possible team combinations, then pair those team combinations together to create the tables for each round.

## False Start No. 2
After throwing in the towel on the first implementation

## Stepping back and doing some research
After two false starts I realized that maybe this problem wasn't as simple as I thought. (Yes, I absolutely should have figured that out before False Start No.1) I also doubted that I was the first person to 

A dive down the math stack exchange rabbit hole lead me to my knio

### Whist Tournaments, Durango Bill and Richard A. Venezia


Check it out! euchreapp.grattafiori.dev

## What I Learned
1. Do some research on your topic instead of diving right in
2. Get better at Big O derivation
3. 


https://www.devenezia.com/downloads/round-robin/rounds.php?it=12&v=w1
https://www.durangobill.com/BridgeCyclicSolutions.html
